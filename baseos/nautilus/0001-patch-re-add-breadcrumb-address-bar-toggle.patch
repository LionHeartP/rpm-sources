From ec058d9af3a477fd3c578256e956f220c62fbab6 Mon Sep 17 00:00:00 2001
From: Tom Crider <tcrider@redhat.com>
Date: Thu, 21 Nov 2024 02:58:43 -0500
Subject: [PATCH] click breadcrumb-to-address-bar-button

---
 src/nautilus-toolbar.c               |   6 ++
 src/nautilus-window-slot.c           | 102 +++++++++++++++++++++++----
 src/nautilus-window-slot.h           |   2 +
 src/resources/ui/nautilus-toolbar.ui |  22 ++++++
 4 files changed, 117 insertions(+), 15 deletions(-)

diff --git a/src/nautilus-toolbar.c b/src/nautilus-toolbar.c
index 3ff4425..21bcaa1 100644
--- a/src/nautilus-toolbar.c
+++ b/src/nautilus-toolbar.c
@@ -33,6 +33,7 @@
 #include "nautilus-pathbar.h"
 #include "nautilus-view-controls.h"
 #include "nautilus-ui-utilities.h"
+#include "nautilus-window-slot.h"
 
 struct _NautilusToolbar
 {
@@ -97,6 +98,11 @@ toolbar_update_appearance (NautilusToolbar *self)
     {
         gtk_stack_set_visible_child_name (GTK_STACK (self->toolbar_switcher), "search");
     }
+    else if (self->window_slot != NULL &&
+        nautilus_window_slot_get_editing (self->window_slot))
+    {
+        gtk_stack_set_visible_child_name (GTK_STACK (self->toolbar_switcher), "location");
+    }
     else if (show_location_entry)
     {
         gtk_stack_set_visible_child_name (GTK_STACK (self->toolbar_switcher), "location");
diff --git a/src/nautilus-window-slot.c b/src/nautilus-window-slot.c
index ef88083..add0b7f 100644
--- a/src/nautilus-window-slot.c
+++ b/src/nautilus-window-slot.c
@@ -62,6 +62,7 @@ enum
     PROP_SEARCH_VISIBLE,
     PROP_SEARCH_GLOBAL,
     PROP_SELECTION,
+    PROP_EDITING,
     PROP_LOCATION,
     PROP_TOOLTIP,
     PROP_ALLOW_STOP,
@@ -160,6 +161,7 @@ struct _NautilusWindowSlot
     GBinding *selection_binding;
     GBinding *extensions_background_menu_binding;
     GBinding *templates_menu_binding;
+    gboolean editing;
     GList *selection;
 };
 
@@ -668,6 +670,36 @@ nautilus_window_slot_handle_activate_files (NautilusWindowSlot *self,
     return TRUE;
 }
 
+
+
+static void
+nautilus_window_slot_set_edit_visible (NautilusWindowSlot *self,
+                                         gboolean            visible)
+{
+    GAction *action;
+
+    action = g_action_map_lookup_action (G_ACTION_MAP (self->slot_action_group),
+                                         "edit-visible");
+    g_action_change_state (action, g_variant_new_boolean (visible));
+}
+
+static gboolean
+nautilus_window_slot_get_edit_visible (NautilusWindowSlot *self)
+{
+    GAction *action;
+    GVariant *state;
+    gboolean editing;
+
+    action = g_action_map_lookup_action (G_ACTION_MAP (self->slot_action_group),
+                                         "edit-visible");
+    state = g_action_get_state (action);
+    editing = g_variant_get_boolean (state);
+
+    g_variant_unref (state);
+
+    return editing;
+}
+
 gboolean
 nautilus_window_slot_handle_event (NautilusWindowSlot    *self,
                                    GtkEventControllerKey *controller,
@@ -675,20 +707,24 @@ nautilus_window_slot_handle_event (NautilusWindowSlot    *self,
                                    GdkModifierType        state)
 {
     gboolean retval;
-    GAction *action;
+    GAction *search, *edit;
 
     retval = FALSE;
-    action = g_action_map_lookup_action (G_ACTION_MAP (self->slot_action_group),
+    edit = g_action_map_lookup_action (G_ACTION_MAP (self->slot_action_group),
+                                         "edit-visible");
+    search = g_action_map_lookup_action (G_ACTION_MAP (self->slot_action_group),
                                          "search-visible");
 
     if (keyval == GDK_KEY_Escape ||
         keyval == GDK_KEY_BackSpace)
     {
-        g_autoptr (GVariant) action_state = NULL;
+        g_autoptr (GVariant) search_state = NULL;
+        g_autoptr (GVariant) edit_state = NULL;
 
-        action_state = g_action_get_state (action);
+        search_state = g_action_get_state (search);
+        edit_state = g_action_get_state (edit);
 
-        if (!g_variant_get_boolean (action_state))
+        if (!g_variant_get_boolean (search_state) || !g_variant_get_boolean (edit_state))
         {
             return GDK_EVENT_PROPAGATE;
         }
@@ -700,17 +736,19 @@ nautilus_window_slot_handle_event (NautilusWindowSlot    *self,
     }
 
     /* If the action is not enabled, don't try to handle search */
-    if (g_action_get_enabled (action))
+    if (g_action_get_enabled (edit))
     {
-        retval = nautilus_query_editor_handle_event (self->query_editor,
-                                                     controller,
-                                                     keyval,
-                                                     state);
-    }
-
-    if (retval && type_ahead_search ())
-    {
-        nautilus_window_slot_set_search_visible (self, TRUE);
+        retval = nautilus_query_editor_handle_event (self->query_editor, controller, keyval, state);
+        if (retval && type_ahead_search ())
+        {
+            nautilus_window_slot_set_edit_visible (self, TRUE);
+        }
+    } else if ( g_action_get_enabled (search)) {
+        retval = nautilus_query_editor_handle_event (self->query_editor, controller, keyval, state);
+        if (retval  && type_ahead_search ())
+        {
+           nautilus_window_slot_set_search_visible (self, TRUE);
+        }
     }
 
     return retval;
@@ -733,6 +771,14 @@ nautilus_window_slot_add_extra_location_widget (NautilusWindowSlot *self,
     gtk_box_append (GTK_BOX (self->extra_location_widgets), widget);
 }
 
+static void
+nautilus_window_slot_set_editing (NautilusWindowSlot *self,
+                                    gboolean            editing)
+{
+    self->editing = editing;
+    g_object_notify_by_pspec (G_OBJECT (self), properties[PROP_EDITING]);
+}
+
 static void
 nautilus_window_slot_set_selection (NautilusWindowSlot *self,
                                     GList              *selection)
@@ -791,6 +837,12 @@ nautilus_window_slot_set_property (GObject      *object,
         }
         break;
 
+        case PROP_EDITING:
+        {
+            nautilus_window_slot_set_editing (self, g_value_get_boolean (value));
+        }
+        break;
+
         case PROP_EXTENSIONS_BACKGROUND_MENU:
         {
             real_set_extensions_background_menu (self, g_value_get_object (value));
@@ -924,6 +976,12 @@ nautilus_window_slot_get_property (GObject    *object,
         }
         break;
 
+        case PROP_EDITING:
+        {
+            g_value_set_boolean (value, nautilus_window_slot_get_editing (self));
+        }
+        break;
+
         case PROP_TOOLTIP:
         {
             g_value_set_static_string (value, nautilus_window_slot_get_tooltip (self));
@@ -956,6 +1014,12 @@ nautilus_window_slot_get_property (GObject    *object,
     }
 }
 
+gboolean
+nautilus_window_slot_get_editing (NautilusWindowSlot *self)
+{
+    return self->editing;
+}
+
 GList *
 nautilus_window_slot_get_selection (NautilusWindowSlot *self)
 {
@@ -1344,6 +1408,7 @@ const GActionEntry slot_entries[] =
     { .name = "search-visible", .state = "false", .change_state = action_search_visible },
     { .name = "search-global", .state = "false", .change_state = action_search_global },
     { .name = "focus-search", .activate = action_focus_search },
+    { .name = "edit-visible", .state = "false", .change_state = action_search_visible },
     { .name = "reload", .activate = action_reload },
     { .name = "stop", .activate = action_stop },
     { .name = "bookmark-current-directory", .activate = action_bookmark_current_directory },
@@ -3085,6 +3150,13 @@ nautilus_window_slot_class_init (NautilusWindowSlotClass *klass)
                               FALSE,
                               G_PARAM_READABLE | G_PARAM_STATIC_STRINGS);
 
+    properties[PROP_EDITING] =
+        g_param_spec_boolean ("editing",
+                              "Whether the current view of the slot is the location bar",
+                              "Whether the current view of the slot is the location bar. Proxy property from the view",
+                              FALSE,
+                              G_PARAM_READWRITE);
+
     properties[PROP_SELECTION] =
         g_param_spec_pointer ("selection", NULL, NULL,
                               G_PARAM_READWRITE | G_PARAM_EXPLICIT_NOTIFY | G_PARAM_STATIC_STRINGS);
diff --git a/src/nautilus-window-slot.h b/src/nautilus-window-slot.h
index 868a396..1633617 100644
--- a/src/nautilus-window-slot.h
+++ b/src/nautilus-window-slot.h
@@ -102,6 +102,8 @@ gboolean nautilus_window_slot_get_search_visible           (NautilusWindowSlot *
 
 gboolean nautilus_window_slot_get_search_global            (NautilusWindowSlot *self);
 
+gboolean nautilus_window_slot_get_editing                (NautilusWindowSlot *slot);
+
 GList* nautilus_window_slot_get_selection                  (NautilusWindowSlot *slot);
 
 void     nautilus_window_slot_search                       (NautilusWindowSlot *slot,
diff --git a/src/resources/ui/nautilus-toolbar.ui b/src/resources/ui/nautilus-toolbar.ui
index 7468503..ea8f0f9 100644
--- a/src/resources/ui/nautilus-toolbar.ui
+++ b/src/resources/ui/nautilus-toolbar.ui
@@ -58,6 +58,28 @@
                 </child>
               </object>
             </child>
+            <child>
+             <object class="GtkToggleButton" id="edit_button">
+               <property name="visible">True</property>
+               <property name="can_focus">True</property>
+               <property name="receives_default">False</property>
+               <property name="tooltip_text" translatable="yes">Edit</property>
+               <property name="halign">center</property>
+               <property name="valign">center</property>
+               <property name="action_name">slot.edit-visible</property>
+               <child>
+                 <object class="GtkImage" id="edit_icon">
+                   <property name="visible">True</property>
+                   <property name="can_focus">False</property>
+                   <property name="icon_name">find-location-symbolic</property>
+                   <property name="icon_size">1</property>
+                 </object>
+               </child>
+               <style>
+                 <class name="image-button"/>
+               </style>
+             </object>
+            </child>
             <child>
               <object class="GtkStack" id="search_button_stack">
                 <property name="hhomogeneous">true</property>
-- 
2.47.0

