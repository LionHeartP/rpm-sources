From 6deb06efe3b4aba798a75fb72bc61111bfc80c48 Mon Sep 17 00:00:00 2001
From: Thomas Crider <gloriouseggroll@gmail.com>
Date: Mon, 1 Jan 2024 19:30:03 -0500
Subject: [PATCH] convert from rogue-enemy to lgcd

---
 .vscode/launch.json                 |  4 ++--
 .vscode/tasks.json                  |  2 +-
 99-rogue.rules => 99-lgcd.rules     |  0
 CMakeLists.txt                      |  4 ++--
 Makefile                            | 19 -----------------
 chimera_install.sh                  | 30 +++++++++++++-------------
 chimera_uninstall.sh                | 14 ++++++------
 imu_message.h                       |  2 +-
 install.sh                          | 28 ++++++++++++------------
 rogue_enemy.h => lgcd.h             |  0
 rogue-enemy.service => lgcd.service |  6 +++---
 logic.c                             |  4 ++--
 output_dev.h                        | 33 +----------------------------
 platform.h                          |  2 +-
 queue.h                             |  2 +-
 settings.h                          |  4 ++--
 uninstall.sh                        | 14 ++++++------
 17 files changed, 59 insertions(+), 109 deletions(-)
 rename 99-rogue.rules => 99-lgcd.rules (100%)
 delete mode 100644 Makefile
 rename rogue_enemy.h => lgcd.h (100%)
 rename rogue-enemy.service => lgcd.service (51%)

diff --git a/.vscode/launch.json b/.vscode/launch.json
index d0ea9f8..77fadc8 100644
--- a/.vscode/launch.json
+++ b/.vscode/launch.json
@@ -8,9 +8,9 @@
             "type": "lldb",
             "request": "launch",
             "name": "Debug",
-            "program": "${workspaceFolder}/build/rogue-enemy",
+            "program": "${workspaceFolder}/build/lgcd",
             "args": [],
             "cwd": "${workspaceFolder}"
         }
     ]
-}
\ No newline at end of file
+}
diff --git a/.vscode/tasks.json b/.vscode/tasks.json
index b01f919..508c379 100644
--- a/.vscode/tasks.json
+++ b/.vscode/tasks.json
@@ -4,7 +4,7 @@
         {
             "label": "Build and Run in Subdir",
             "type": "shell",
-            "command": "make clean && cmake --build . && sudo ./rogue-enemy",
+            "command": "make clean && cmake --build . && sudo ./lgcd",
             "options": {
                 "cwd": "${workspaceFolder}/build"
             },
diff --git a/99-rogue.rules b/99-lgcd.rules
similarity index 100%
rename from 99-rogue.rules
rename to 99-lgcd.rules
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5912775..9477c99 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,12 +1,12 @@
 cmake_minimum_required(VERSION 3.1...3.27)
 
 project(
-  ROGueENEMY
+  lgcd
   VERSION 1.0
   LANGUAGES C
 )
 
-set(EXECUTABLE_NAME "rogue-enemy")
+set(EXECUTABLE_NAME "lgcd")
 
 set(THREADS_PREFER_PTHREAD_FLAG ON)
 find_package(Threads REQUIRED)
diff --git a/Makefile b/Makefile
deleted file mode 100644
index 4cc81e6..0000000
--- a/Makefile
+++ /dev/null
@@ -1,19 +0,0 @@
-#CFLAGS= -g -O0 -D _DEFAULT_SOURCE -D_POSIX_C_SOURCE=200112L -std=c11 -fPIE -pedantic -Wall # -Werror
-CFLAGS= -O3 -march=znver4 -D _DEFAULT_SOURCE -D_POSIX_C_SOURCE=200112L -std=c11 -fPIE -pedantic -Wall -flto=full # -Werror
-LDFLAGS=-lpthread -levdev -lconfig -lrt -lm -flto=full
-CC=clang
-OBJECTS=main.o input_dev.o dev_iio.o output_dev.o queue.o logic.o platform.o settings.o virt_ds4.o virt_ds5.o
-TARGET=rogue-enemy
-
-all: $(TARGET)
-
-$(TARGET): $(OBJECTS)
-	$(CC) $(LDFLAGS) $(OBJECTS) -o $@
-
-include depends
-
-depends:
-	$(CC) -MM $(OBJECTS:.o=.c) > depends
-
-clean:
-	rm -f ./$(TARGET) *.o depends
\ No newline at end of file
diff --git a/chimera_install.sh b/chimera_install.sh
index ecf38fa..f4574ca 100644
--- a/chimera_install.sh
+++ b/chimera_install.sh
@@ -9,14 +9,14 @@ else
 fi
 
 # Define variables
-REPO_URL="https://github.com/corando98/ROGueENEMY"
-BUILD_DIR="/tmp/ROGueENEMY"
+REPO_URL="https://github.com/gloriouseggroll/lgcd"
+BUILD_DIR="/tmp/lgcd"
 INSTALL_DIR="$HOME_DIR/.local/bin"
 SYSTEMD_DIR="/etc/systemd/system"
 UDEV_RULES_DIR="/etc/udev/rules.d"
-CONFIG_DIR="/etc/ROGueENEMY"
+CONFIG_DIR="/etc/lgcd"
 
-echo "Starting installation of ROGueENEMY..."
+echo "Starting installation of lgcd..."
 
 # Ensure running as root
 if [ "$(id -u)" -ne 0 ]; then
@@ -40,17 +40,17 @@ rm -rf "$BUILD_DIR"
 git clone "$REPO_URL" "$BUILD_DIR"
 
 echo "Copying udev rule..."
-cp "$BUILD_DIR/99-rogue.rules" "$UDEV_RULES_DIR"
+cp "$BUILD_DIR/99-lgcd.rules" "$UDEV_RULES_DIR"
 cp "$BUILD_DIR/99-disable-sonypad.rules" "$UDEV_RULES_DIR"
 
 echo "Downloading the latest release..."
-curl -L $(curl -s https://api.github.com/repos/corando98/ROGueENEMY/releases/latest | grep "browser_download_url" | cut -d '"' -f 4) -o $BUILD_DIR/rogue-enemy
+curl -L $(curl -s https://api.github.com/repos/gloriouseggroll/lgcd/releases/latest | grep "browser_download_url" | cut -d '"' -f 4) -o $BUILD_DIR/lgcd
 
 # Installation
 echo "Installing executable..."
 mkdir -p "$INSTALL_DIR"
-cp "$BUILD_DIR/rogue-enemy" "$INSTALL_DIR/rogue-enemy"
-chmod +x "$INSTALL_DIR/rogue-enemy"
+cp "$BUILD_DIR/lgcd" "$INSTALL_DIR/lgcd"
+chmod +x "$INSTALL_DIR/lgcd"
 
 echo "Creating and setting up system service..."
 mkdir -p "$SYSTEMD_DIR"
@@ -58,9 +58,9 @@ mkdir -p "$UDEV_RULES_DIR"
 mkdir -p "$CONFIG_DIR"
 
 # Create systemd service file
-cat <<EOF > "$SYSTEMD_DIR/rogue-enemy.service"
+cat <<EOF > "$SYSTEMD_DIR/lgcd.service"
 [Unit]
-Description=ROGueENEMY service
+Description=Legion Go Controller Daemon service
 
 [Service]
 Type=simple
@@ -68,24 +68,24 @@ Nice=-15
 Restart=always
 RestartSec=5
 WorkingDirectory=$INSTALL_DIR
-ExecStart=$INSTALL_DIR/rogue-enemy
+ExecStart=$INSTALL_DIR/lgcd
 
 [Install]
 WantedBy=multi-user.target
 EOF
 
 # Install other files
-install -m 644 "$BUILD_DIR/99-rogue.rules" "$UDEV_RULES_DIR/"
+install -m 644 "$BUILD_DIR/99-lgcd.rules" "$UDEV_RULES_DIR/"
 # Uncomment the following if the configuration file is necessary
 # install -m 644 "$BUILD_DIR/config.cfg" "$CONFIG_DIR/config.cfg"
 
 # Post-installation
 echo "Reloading system daemons and applying new udev rules..."
-systemctl daemon-reload
-systemctl enable rogue-enemy.service
-systemctl start rogue-enemy.service
 udevadm control --reload-rules
 udevadm trigger
+systemctl daemon-reload
+systemctl enable lgcd.service
+systemctl start lgcd.service
 
 # Cleanup
 echo "Cleaning up..."
diff --git a/chimera_uninstall.sh b/chimera_uninstall.sh
index 8218030..1ee03d9 100644
--- a/chimera_uninstall.sh
+++ b/chimera_uninstall.sh
@@ -12,9 +12,9 @@ fi
 INSTALL_DIR="$HOME_DIR/.local/bin"
 SYSTEMD_DIR="/etc/systemd/system"
 UDEV_RULES_DIR="/etc/udev/rules.d"
-CONFIG_DIR="/etc/ROGueENEMY"
+CONFIG_DIR="/etc/lgcd"
 
-echo "Starting uninstallation of ROGueENEMY..."
+echo "Starting uninstallation of lgcd..."
 
 # Ensure running as root
 if [ "$(id -u)" -ne 0 ]; then
@@ -24,20 +24,20 @@ fi
 
 # Stop and disable the systemd service
 echo "Disabling and stopping the systemd service..."
-systemctl stop rogue-enemy.service
-systemctl disable rogue-enemy.service
-rm -f "$SYSTEMD_DIR/rogue-enemy.service"
+systemctl stop lgcd.service
+systemctl disable lgcd.service
+rm -f "$SYSTEMD_DIR/lgcd.service"
 
 echo "Enabling handycon..."
 systemctl enable --now handycon.service
 
 # Remove the executable
 echo "Removing the executable..."
-rm -f "$INSTALL_DIR/rogue-enemy"
+rm -f "$INSTALL_DIR/lgcd"
 
 # Remove udev rules
 echo "Removing udev rules..."
-rm -f "$UDEV_RULES_DIR/99-rogue.rules"
+rm -f "$UDEV_RULES_DIR/99-lgcd.rules"
 rm -f "$UDEV_RULES_DIR/99-disable-sonypad.rules"
 
 # Remove configuration directory
diff --git a/imu_message.h b/imu_message.h
index 6fa45ad..fa6b0d6 100644
--- a/imu_message.h
+++ b/imu_message.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "rogue_enemy.h"
+#include "lgcd.h"
 
 #define IMU_MESSAGE_FLAGS_ACCEL   0x00000001U
 #define IMU_MESSAGE_FLAGS_ANGLVEL 0x00000002U
diff --git a/install.sh b/install.sh
index 9f22436..90dba14 100644
--- a/install.sh
+++ b/install.sh
@@ -1,14 +1,14 @@
 #!/bin/bash
 
 # Define variables
-REPO_URL="https://github.com/corando98/ROGueENEMY"
-BUILD_DIR="/tmp/ROGueENEMY"
+REPO_URL="https://github.com/gloriouseggroll/lgcd"
+BUILD_DIR="/tmp/lgcd"
 INSTALL_DIR="/usr/bin"
 SYSTEMD_DIR="/etc/systemd/system"
 UDEV_RULES_DIR="/usr/lib/udev/rules.d"
-CONFIG_DIR="/etc/ROGueENEMY"
+CONFIG_DIR="/etc/lgcd"
 
-echo "Starting installation of ROGueENEMY..."
+echo "Starting installation of lgcd..."
 
 echo "Disabling handycon..."
 systemctl disable --now handycon.service
@@ -30,20 +30,20 @@ rm -rf "$BUILD_DIR"
 git clone "$REPO_URL" "$BUILD_DIR"
 
 echo "Copying udev rule..."
-cp "$BUILD_DIR/99-rogue.rules" "$UDEV_RULES_DIR"
+cp "$BUILD_DIR/99-lgcd.rules" "$UDEV_RULES_DIR"
 cp "$BUILD_DIR/99-disable-sonypad.rules" "$UDEV_RULES_DIR"
 
 
 
 echo "Downloading the latest release..."
 echo "Downloading the latest release..."
-curl -L $(curl -s https://api.github.com/repos/corando98/ROGueENEMY/releases/latest | grep "browser_download_url" | cut -d '"' -f 4) -o $BUILD_DIR/rogue-enemy
+curl -L $(curl -s https://api.github.com/repos/gloriouseggroll/lgcd/releases/latest | grep "browser_download_url" | cut -d '"' -f 4) -o $BUILD_DIR/lgcd
 
 # Installation
 echo "Installing executable..."
 mkdir -p "$INSTALL_DIR"
-cp "$BUILD_DIR/rogue-enemy" "$INSTALL_DIR/rogue-enemy"
-chmod +x $INSTALL_DIR/rogue-enemy
+cp "$BUILD_DIR/lgcd" "$INSTALL_DIR/lgcd"
+chmod +x $INSTALL_DIR/lgcd
 
 echo "Creating and setting up system service..."
 echo "Setting up system service..."
@@ -52,9 +52,9 @@ mkdir -p "$UDEV_RULES_DIR"
 mkdir -p "$CONFIG_DIR"
 
 # Create systemd service file
-cat <<EOF > "$SYSTEMD_DIR/rogue-enemy.service"
+cat <<EOF > "$SYSTEMD_DIR/lgcd.service"
 [Unit]
-Description=ROGueENEMY service
+Description=Legion Go Controller Daemon service
 
 [Service]
 Type=simple
@@ -62,22 +62,22 @@ Nice=-15
 Restart=always
 RestartSec=5
 WorkingDirectory=$INSTALL_DIR
-ExecStart=$INSTALL_DIR/rogue-enemy
+ExecStart=$INSTALL_DIR/lgcd
 
 [Install]
 WantedBy=multi-user.target
 EOF
 
 # Install other files
-install -m 644 "$BUILD_DIR/99-rogue.rules" "$UDEV_RULES_DIR/"
+install -m 644 "$BUILD_DIR/99-lgcd.rules" "$UDEV_RULES_DIR/"
 # Uncomment the following if the configuration file is necessary
 # install -m 644 "$BUILD_DIR/config.cfg" "$CONFIG_DIR/config.cfg"
 
 # Post-installation
 echo "Reloading system daemons and applying new udev rules..."
 systemctl daemon-reload
-systemctl enable rogue-enemy.service
-systemctl start rogue-enemy.service
+systemctl enable lgcd.service
+systemctl start lgcd.service
 udevadm control --reload-rules
 udevadm trigger
 
diff --git a/rogue_enemy.h b/lgcd.h
similarity index 100%
rename from rogue_enemy.h
rename to lgcd.h
diff --git a/rogue-enemy.service b/lgcd.service
similarity index 51%
rename from rogue-enemy.service
rename to lgcd.service
index fdbd4d5..9134d30 100644
--- a/rogue-enemy.service
+++ b/lgcd.service
@@ -1,5 +1,5 @@
 [Unit]
-Description=ROGueENEMY service
+Description=Legion Go Controller Daemon service
 
 [Service]
 Type=simple
@@ -7,7 +7,7 @@ Nice = -15
 Restart=always
 RestartSec=5
 WorkingDirectory=/usr/bin
-ExecStart=/usr/bin/rogue-enemy
+ExecStart=/usr/bin/lgcd
 
 [Install]
-WantedBy=multi-user.target
\ No newline at end of file
+WantedBy=multi-user.target
diff --git a/logic.c b/logic.c
index 72bf5c2..b7950eb 100644
--- a/logic.c
+++ b/logic.c
@@ -4,7 +4,7 @@
 #include "virt_ds4.h"
 #include "virt_ds5.h"
 
-static const char* configuration_file = "/etc/ROGueENEMY/config.cfg";
+static const char* configuration_file = "/etc/lgcd/config.cfg";
 
 int logic_create(logic_t *const logic) {
     logic->flags = 0x00000000U;
@@ -199,4 +199,4 @@ void logic_request_termination(logic_t *const logic) {
 
 int logic_termination_requested(logic_t *const logic) {
     return (logic->flags & LOGIC_FLAGS_TERMINATION_REQUESTED) != 0;
-}
\ No newline at end of file
+}
diff --git a/output_dev.h b/output_dev.h
index ef89158..f6cd48d 100644
--- a/output_dev.h
+++ b/output_dev.h
@@ -3,40 +3,9 @@
 #include "queue.h"
 #include "logic.h"
 
-// // Emulates a "Generic" controller:
-// #define OUTPUT_DEV_NAME             "ROGueENEMY"
-// #define OUTPUT_DEV_VENDOR_ID        0x108c
-// #define OUTPUT_DEV_PRODUCT_ID       0x0323
-// #define OUTPUT_DEV_VERSION          0x0111
-
-
-// Emulates a steam controller
-// #define OUTPUT_DEV_NAME             "Steam Controller"
-// #define OUTPUT_DEV_VENDOR_ID        0x28de
-// #define OUTPUT_DEV_PRODUCT_ID       0x1102
-// #define OUTPUT_DEV_VERSION          0x0111
-// #define OUTPUT_DEV_BUS_TYPE         BUS_USB
-
-
-/*
-//Emulates an Xbox one wireless controller:
-#define OUTPUT_DEV_NAME             "Xbox Wireless Controller"
-#define OUTPUT_DEV_VENDOR_ID        0x045e
-#define OUTPUT_DEV_PRODUCT_ID       0x028e
-#define OUTPUT_DEV_BUS_TYPE         BUS_BLUETOOTH
-*/
-
-
-// // Emulates a DualShock controller
-// #define OUTPUT_DEV_NAME             "Sony Interactive Entertainment DualSense Wireless Controller"
-// #define OUTPUT_DEV_VENDOR_ID        0x054c
-// #define OUTPUT_DEV_PRODUCT_ID       0x0ce6
-// #define OUTPUT_DEV_VERSION          0x8111
-// #define OUTPUT_DEV_BUS_TYPE         BUS_USB
-
 
 // Emulates a DUALSENSE EDGE controller
-#define OUTPUT_DEV_NAME             "Sony Interactive Entertainment DualSense Edge Wireless Controller"
+#define OUTPUT_DEV_NAME             "Lenovo Legion Go Controller (Connected)"
 #define OUTPUT_DEV_VENDOR_ID        0x054c
 #define OUTPUT_DEV_PRODUCT_ID       0x0df2
 #define OUTPUT_DEV_VERSION          0x8111
diff --git a/platform.h b/platform.h
index 7272c70..c1f54ec 100644
--- a/platform.h
+++ b/platform.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "rogue_enemy.h"
+#include "lgcd.h"
 
 typedef struct rc71l_platform {
     unsigned long mode;
diff --git a/queue.h b/queue.h
index d8373f5..9d3c3ef 100644
--- a/queue.h
+++ b/queue.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "rogue_enemy.h"
+#include "lgcd.h"
 
 typedef struct queue {
     sem_t empty, full;
diff --git a/settings.h b/settings.h
index 119a279..e7988c5 100644
--- a/settings.h
+++ b/settings.h
@@ -1,6 +1,6 @@
 #pragma once
 
-#include "rogue_enemy.h"
+#include "lgcd.h"
 
 typedef struct controller_settings {
     uint16_t ff_gain;
@@ -10,4 +10,4 @@ typedef struct controller_settings {
 
 void init_config(controller_settings_t *const conf);
 
-int fill_config(controller_settings_t *const conf, const char* file);
\ No newline at end of file
+int fill_config(controller_settings_t *const conf, const char* file);
diff --git a/uninstall.sh b/uninstall.sh
index eea2e9b..17b4359 100644
--- a/uninstall.sh
+++ b/uninstall.sh
@@ -4,9 +4,9 @@
 INSTALL_DIR="/usr/bin"
 SYSTEMD_DIR="/etc/systemd/system"
 UDEV_RULES_DIR="/usr/lib/udev/rules.d"
-CONFIG_DIR="/etc/ROGueENEMY"
+CONFIG_DIR="/etc/lgcd"
 
-echo "Starting uninstallation of ROGueENEMY..."
+echo "Starting uninstallation of lgcd..."
 
 # Ensure running as root
 if [ "$(id -u)" -ne 0 ]; then
@@ -16,21 +16,21 @@ fi
 
 # Stop and disable the systemd service
 echo "Disabling and stopping the systemd service..."
-systemctl stop rogue-enemy.service
-systemctl disable rogue-enemy.service
-rm -f "$SYSTEMD_DIR/rogue-enemy.service"
+systemctl stop lgcd.service
+systemctl disable lgcd.service
+rm -f "$SYSTEMD_DIR/lgcd.service"
 
 echo "Enabling handycon..."
 systemctl enable --now handycon.service
 
 # Remove the executable
 echo "Removing the executable..."
-rm -f "$INSTALL_DIR/rogue-enemy"
+rm -f "$INSTALL_DIR/lgcd"
 
 # Remove udev rules
 echo "Removing udev rules..."
 rm -f "$UDEV_RULES_DIR/99-disable-sonypad.rules"
-rm -f "$UDEV_RULES_DIR/99-rogue.rules"
+rm -f "$UDEV_RULES_DIR/99-lgcd.rules"
 
 
 # Remove configuration directory
-- 
2.43.0

